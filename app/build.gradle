apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testCompile rootProject.ext.dependencies["junit"]
    implementation rootProject.ext.dependencies["scale-image-view"]//加载本地大图
    implementation rootProject.ext.dependencies["twink-refresh"]//刷新库
    implementation rootProject.ext.dependencies["advanced-webview"]//增强WebView
    implementation rootProject.ext.dependencies["kenburnsview"]//动效库
    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    implementation rootProject.ext.dependencies["annotations"]
    implementation rootProject.ext.dependencies["arouter-api"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    provided rootProject.ext.dependencies["javax.annotation"]
    implementation rootProject.ext.dependencies["android-gif-drawable"]

    if (isNeedHomeModule.toBoolean()) {
        implementation project(':home_module')
    }
//    if (isNeedFindModule.toBoolean()) {
//        implementation project(':find')
//    }
//    if (isNeedChatModule.toBoolean()) {
//        implementation project(':chat')
//    }
//    if (isNeedMineModule.toBoolean()) {
//        implementation project(':mine')
//    }
    implementation project(':common')


}
